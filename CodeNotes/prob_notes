-------------------------------------------
// comments
############### problem name


-------------------------------------------
Problems to be solved later:





-------------------------------------------


-----------------Start---------------------

###############10258 - Contest Scoreboard
type: Data Structure(algorithm)
time limit : 3 sec

the problem was easy.. but the test case we need to generate can be full of
bug.the line break problem is handeled by string and stringstream

tricky test case:
input:
1

1 2 10 C
1 2 20 C
1 3 50 I
2 1 15 I
2 1 20 C
3 1 10 I
4 1 10 U

output:
1 1 10 //he solved the 1st problem (counted the 1st ac time)
2 1 40 //as defined in the description
3 0 0  //he tried but didnt solve any
4 0 0  //he didnt solve any problem, but participated

###############665 - False coin
type: Data Structure(1D array)
time limit: 3 sec

the problem only contains an easy trick. the false coin cant be determined
by '<' or '>'. if there is a '=', then they are not false coin. So we have
to judge if there ONLY 1 false coin found in the input set.

There is no tricky test cases.

##############467 - Synching Signals
type: Data Structure(1D array)
time limit: 3 sec

the problem was hard in first time. need to check if every light was on or
should be on in every second. if the red ligh time is rt green light time gt
and yellow light time yt, then the total cycle is rt+gt+yt
in first cycle the green light is turned on.
so we can measure in which second another cycle starts by
::current_second/(gt+yt+rt) == 0
also this the green ligh would be turn off after every gt time on each circle.
so it should be turned off manualy

tricky test case:
at first all the lights are green.if the gt time is too high for no.1 and too
low for no.2, then 2 might be finish one circle while 1 is still in green.

##############11683 - Laser Sculpture
type: Ad Hoc (Easy)
time limit: 3 sec

the problem can be solved with 1 linier scan. but finding the trick can be hard.
	6|
	5|
	4|              ___
	3|  ___   ___   |  |   ___
	2|  |  |__|  |__|  |___|  |
	1|  |                     |
	0|----------------------------
	0  1  2  3  4  5  6  7
the algorighm is:
for first time
	turn_laser = total_height_sculpture - height_of_current_level
for the rest of time
if(current_level < past_level)
	turn_laser++;

there is no tricky case

#############12356 - Army Buddies
type: Data Structure(1D Array)
time limit: 3 sec

if no tricks is used in 1D array it might get TLE. Can be used DP.
the trick I used:
left_soldier[num_of_current_soldier] = num_of_soldier_on_left
right_soldier[num_of_current_soldier] = num_of_soldier_on_right
to manipulate it:
left_soldier[right_soldier[num_of_current_soldier]] = left_soldier[num_of_current_soldier]

right_soldier[left_soldier[num_of_current_soldier]] = right_soldier[num_of_current_soldier]

there is no tricky test case.


